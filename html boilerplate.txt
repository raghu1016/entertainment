<!DOCTYPE html>
 <html>
  <head>
    <title>entertainment</title>
  </head>
<body>

</body>
</html>

<form action="/register" method="POST">
    <div class="form-group">
        <inputs class="form-control" type="text" id="exampleFormControlInput1" name="username" placeholder="username">
    </div> 
    <div class="form-group"> 
        <inputs class="form-control" type="text" 
        id="exampleFormControlInput2" name="password" placeholder="password">
    </div> 
        <button type="submit">sign up</button>  
</form>

<div class="container">
    <div class="row">
     <div class="align-middle">
        <div class ="col-md-12">
           
                <div class="justify-content-md-center">


<div class="container">
    <div id="landing-header">
        <h1>wellcome to entertainment zone</h1>
        <a href="/entertainment" class="btn btn-xs btn-success">veiw all entertainments</a>
    </div>S
</div>

<ul class="slideshow">
      <li></li>
      <li></li>
      <li></li>
      <li></li>
      <li></li>
</ul>

                    // function checkProjectOwnership(req,res,next){
//  Entertainment.findById(req.params.id,function(err,foundentertainment){
//  if(err){
//          console.log(err)
//         }
//      else{

//          if(foundentertainment.author.id.equals(req.user._id)){
//              next();
//                                                               }
//          else{
//      res.redirect("/entertainment")
//      console.log(foundentertainment)
//               }
//             }
//       })
// }

//============================================//
//mongoose query
//============================================//

// SCHEMA SETUP
 //   Entertainment.create( 
 // {name: "taylar shift", 
 // image: "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcSzjMvm2o9Lt0Fe6BMZH0yjL_GrqlzToZtNNCOK9CFVSerKKBki",
 // description: "i love every song of her"},
 // function(err,entertainment) {
 //     if(err){
 //         console.log(err)
 //     }
 //     else{
 //         console.log("newly created entertainment")
 //         console.log(entertainment)
 //     }
 // })
 //  Comment.create(
 //  {
 //     text: "This place is great, but I wish there was internet",
 //     author: "Homer"
 //  }, function(err, comment){
 //         if(err){
 //             console.log(err);
 //         } else {
 //         Entertainment.comments.push(comment);
 //         Entertainment.save();
 //         console.log("Created new comment");
 //                                 }
 // })                          


// const uri = "mongodb+srv://raghurukel:991016@cluster0-vlj2j.mongodb.net/entertainment?retryWrites=true&w=majority"

// mongoose.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true })
//     .catch(error => console.log(error));



<!-- <div class="row">
  <div class="col-md-4">
    <h1><%= user.firstname + " " + user.lastname %></h1>
    <div class="img-fluid img-thumbnail">
      <div class="caption">
        <a href="mailto:<%=user.email%>"><%=user.email %></a>
      </div>
      <div>
        here is the users profile if u want any informtion can get it from here and clarify ur doughts
      </div>
    </div>
    </div>
    <div class="col-md-8">
      <ul>
          <% entertainment.forEach(function(entertainment) {%>
            <a href="/entertainment/<%=entertainment.id %>"><%= entertainment.name%>
            </a>
          <% })%>  
      </ul> 
    </div>
</div -->>


// router.post('/register', function(req, res, next) {
// var newUser = new User({
//     firstname:req.body.firstname,
//     lastname:req.body.lastname,
//     username:req.body.username,
//     email:req.body.email
//                       })

// User.register(newUser,req.body.password,function (err,user) {
//     if (err) {
//         console.log(err);
//         req.flash("error", "err" + err.message)
//         return res.render("users/register")
//         }
//  passport.authenticate("local")(req,res,function(){
//   async.waterfall([
//     function(done) {
//       crypto.randomBytes(20, function(err, buf) {
//         var token = buf.toString('hex');
//         done(err, token);
//       });
//     },
//     function(token, done) {
//       User.findOne({ email: req.body.email }, function(err, user) {
//         if (user) {
//           req.flash('error', 'email address exists.');
//           return res.redirect('/register');
//         }

//         user.verifyEmail = token;
//         user.active = Date.now() + 3600000; // 1 hour

//         user.save(function(err) {
//           done(err, token, user);
//         });
//       });
//     },
//     function(token, user, done) {
//       var smtpTransport = nodemailer.createTransport({
//         service: 'Gmail', 
//         auth: {
//           user: process.env.GMAILID,
//           pass: process.env.GMAILPW
//         }
//     })
//       // },function(err){
//       //   return next(err);
//       // });
//       var mailOptions = {
//         to: user.email,
//         from: process.env.GMAILID,
//         subject: 'Node.js email address verfication',
//         text: 'You are receiving this because to verify your account.\n\n' +
//           'Please click on the following link, or paste this into your browser to activation:\n\n' +
//           'http://' + req.headers.host + '/register/' + token + '\n\n' +
//           'hi there thank you for registering.\n'
//       };
//       smtpTransport.sendMail(mailOptions, function(err) {
//         console.log('mail sent');
//         // console.log(err);
//         req.flash('success', 'An e-mail has been sent to ' + user.email + ' with further instructions.');
//         done(err, 'done');
//       });
//     }
//   ]
// , function(err) {
//     if (err)
//     // console.log(err)       
//     return next(err);
//     res.redirect('/register');


//   });
// });
// });
// });

// router.get('/register/:token', function(req, res) {
//   async.waterfall([
//     function(done) {
//       User.findOne({ verifyEmail: req.params.token, active: { $gt: Date.now() } }, function(err, user) {
//         if (!user) {
//           req.flash('error', 'Password reset token is invalid or has expired.');
//           return res.redirect('back');
//         }
//             user.verifyEmail = undefined;
//             user.active = undefined;

//             user.save(function(err) {
//               req.logIn(user, function(err) {
//                 done(err, user);
//               });
//             });
//       });
//     },
//     function(user, done) {
//       var smtpTransport = nodemailer.createTransport({
//         service: 'Gmail', 
//         auth: {
//           user: process.env.GMAILID,
//           pass: process.env.GMAILPW
//         }
//       });
//       var mailOptions = {
//         to: user.email,
//         from: 'process.env.GMAILID',
//         subject: 'Your password has been changed',
//         text: 'Hello,\n\n' +
//           'This is a confirmation that your account has been verified' + user.email + 'now enjoy begins.\n'
//       };
//       smtpTransport.sendMail(mailOptions, function(err) {
//         req.flash('success', 'Registered successfully.');
//         done(err);
//       });
//     }
//   ], function(err) {
//     res.redirect('/entertainment');
//   });
// });